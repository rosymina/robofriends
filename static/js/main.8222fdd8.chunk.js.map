{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","robot","className","alt","src","id","name","email","CardList","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","border","children","ErrorBoundary","state","hasError","error","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"kMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gDCOCQ,G,OAZF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACX,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAOC,IAAG,+BAA0BH,EAAMI,GAAhC,cACnB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,aAJwDN,EAAMI,MCQzEG,EARE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACIA,EAAOC,KAAI,SAAAC,GAAS,OAAOX,EAAK,CAACC,MAAMU,UCQpCC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,qBAAKX,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,eACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,OAAQC,OAAQ,mBAAzD,SACKJ,EAAMK,YCiBJC,G,yDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAO,CACRC,UAAS,GAHE,E,8DAODC,GACdC,KAAKC,SAAS,CAACH,UAAS,M,+BAIxB,OAAGE,KAAKH,MAAMC,SACH,wCACJE,KAAKV,MAAMK,a,GAfEO,cC+CbC,E,kDAzCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAbxC,EAAKX,MAAQ,CACThB,OAAQ,GACRyB,YAAY,IAJN,E,gEAQO,IAAD,OAChBG,MAAM,8CACL3C,MAAK,SAAA4C,GAAQ,OAAIA,EAASC,UAC1B7C,MAAK,SAAA8C,GAAK,OAAI,EAAKX,SAAS,CAACpB,OAAO+B,S,+BAQ/B,IAAD,EACyBZ,KAAKH,MAA5BhB,EADF,EACEA,OAAQyB,EADV,EACUA,YACTO,EAAiBhC,EAAOiC,QAAO,SAAAzC,GACjC,OAAOA,EAAMK,KAAKqC,cAAcC,SAASV,EAAYS,kBAGzD,OAASlC,EAAOoC,OAGZ,sBAAK3C,UAAY,KAAjB,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWW,aAAgBe,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUvB,OAAUgC,WAPhC,oBAAIvC,UAAU,KAAd,4B,GA3BU4B,aCAlBgB,IAASC,OACP,cAAC,EAAD,IAASC,SAASC,eAAe,SAEnC1D,M","file":"static/js/main.8222fdd8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({robot}) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc' key={robot.id}>\r\n            <img alt='robot'src={`https://robohash.org/${robot.id}?200x200`}/>\r\n            <div>\r\n                <h2>{robot.name}</h2>\r\n                <p>{robot.email}</p>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n           {robots.map(user => {return Card({robot:user})})}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    \r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='Search Robot' \r\n                onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', height:'80vh', border: '5px solid black'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import { render } from '@testing-library/react';\r\nimport React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error){\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError)\r\n            return <h1>Oooops</h1>\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n\r\nclass App extends Component { \r\n    constructor() {\r\n        super();\r\n        this.state = {           \r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value});\r\n        \r\n    }\r\n\r\n    render() {       \r\n        const {robots, searchfield} = this.state;                 \r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return (!robots.length) ?\r\n        <h1 className='tc'>Loading...</h1> :                \r\n        (\r\n            <div className = 'tc'>\r\n                <h1 className='f1'>RoboFreiends</h1>\r\n                <SearchBox searchChange = {this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                    <CardList robots = {filteredRobots} />\r\n                    </ErrorBoundary>\r\n                </Scroll>                    \r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(\n  <App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}